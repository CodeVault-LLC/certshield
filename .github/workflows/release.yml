name: Build and Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, 386, arm, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build
        run: |
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || (matrix.os == 'ubuntu-latest' && 'linux' || 'darwin') }}
          GOARCH=${{ matrix.arch }}
          OUTPUT_NAME=myapp-${{ matrix.os }}-${{ matrix.arch }}
          go build -o $OUTPUT_NAME
        env:
          CGO_ENABLED: 0

      - name: Archive build artifacts
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          tar czf myapp-${{ matrix.os }}-${{ matrix.arch }}.tar.gz myapp-${{ matrix.os }}-${{ matrix.arch }}

      - name: Archive build artifacts
        if: ${{ matrix.os != 'ubuntu-latest' }}
        run: |
          zip myapp-${{ matrix.os }}-${{ matrix.arch }}.zip myapp-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: myapp-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            myapp-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            myapp-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Install Changelogithub
        run: npm install -g changelogithub

      - name: Generate Changelog
        run: changelogithub
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get release tag
        id: get_tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_tag.outputs.tag }}
          release_name: Release ${{ steps.get_tag.outputs.tag }}
          body: ${{ steps.generate_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Release Assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: myapp-*.tar.gz
          asset_name: myapp-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
          asset_content_type: application/gzip
