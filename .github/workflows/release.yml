name: Build and Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [amd64, 386, arm, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22

      - name: Build
        run: |
          GOOS=${{ matrix.os == 'windows-latest' && 'windows' || (matrix.os == 'ubuntu-latest' && 'linux' || 'darwin') }}
          GOARCH=${{ matrix.arch }}
          OUTPUT_NAME=certshield-${{ matrix.os }}-${{ matrix.arch }}
          go build -o $OUTPUT_NAME
        env:
          CGO_ENABLED: 0

      - name: Archive build artifacts (tar.gz)
        if: ${{ matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest' }}
        run: |
          tar czf certshield-${{ matrix.os }}-${{ matrix.arch }}.tar.gz certshield-${{ matrix.os }}-${{ matrix.arch }}

      - name: Archive build artifacts (zip)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          zip certshield-${{ matrix.os }}-${{ matrix.arch }}.zip certshield-${{ matrix.os }}-${{ matrix.arch }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: certshield-${{ matrix.os }}-${{ matrix.arch }}
          path: |
            certshield-${{ matrix.os }}-${{ matrix.arch }}.tar.gz
            certshield-${{ matrix.os }}-${{ matrix.arch }}.zip

  release:
    runs-on: ubuntu-latest
    needs: build
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch all history for tags

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: lts/*

      - name: Download Semantic Release
        run: npm install -g semantic-release

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-ubuntu-latest-amd64

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-windows-latest-amd64

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-macos-latest-amd64

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-ubuntu-latest-386

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-windows-latest-386

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-macos-latest-386

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-ubuntu-latest-arm

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-windows-latest-arm

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-macos-latest-arm

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-ubuntu-latest-arm64

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-windows-latest-arm64

      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: certshield-macos-latest-arm64

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
